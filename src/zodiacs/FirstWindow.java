/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package zodiacs;

/**
 *
 * @author admin
 */
public class FirstWindow extends javax.swing.JFrame {

    /**
     * Creates new form FirstWindow
     */
    public FirstWindow(){
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnOutIfo = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtBoxDay = new javax.swing.JTextField();
        txtBoxMounth = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(435, 344));
        setMinimumSize(new java.awt.Dimension(435, 344));
        setResizable(false);

        jLabel1.setText("Введіть день народження(цифру)");
        jLabel1.setName(""); // NOI18N

        btnOutIfo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnOutIfo.setText("Вивести інформацію про знаки зодіака");
        btnOutIfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOutIfoActionPerformed(evt);
            }
        });

        jLabel2.setText("Введіть місяць народження (Буквами)");

        txtBoxDay.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBoxDay.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtBoxMounth.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBoxMounth.setToolTipText("Водьте місяці з так \nСічень Лютий Грудень\nБерезень Квітень Травень \nЧервень Липень Серпень\nВересень Жовтень Листопад "); // NOI18N
        txtBoxMounth.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("Segoe Script", 3, 18)); // NOI18N
        jLabel3.setText("Інформація про знаки зодіака");

        jButton3.setText("Про автора");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setText("Інфо");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(jLabel3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(50, 50, 50))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(txtBoxDay, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap())
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtBoxMounth, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnOutIfo, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(99, 99, 99)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton2))
                .addGap(40, 40, 40)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBoxDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBoxMounth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(110, 110, 110)
                .addComponent(btnOutIfo, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnOutIfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOutIfoActionPerformed
           String day =  txtBoxDay.getText();
           String mounth =  txtBoxMounth.getText();
           int d = Integer.parseInt (day); 
       
           if(d >=21 && "Березень".equals(mounth) && d <=31 && "Березень".equals(mounth) ||d >=1 && "Квітень".equals(mounth) && d <=20 && "Квітень".equals(mounth) ){
                  String Aries = "Овен";
               String read = "src\\zodiacs\\data\\Aries.txt";
              
               String result = FileReader.readFile(read);
               ZodiacInfo zodiacInf =new ZodiacInfo();
               zodiacInf.zodiactxt.setText(result);
               zodiacInf.setVisible(true);
               this.setVisible(false);
               zodiacInf.txtZodaic.setText(Aries);
               
           }
           else
               if(d >=21 && "Квітень".equals(mounth) && d <=30 && "Квітень".equals(mounth) ||d >=1 && "Травень".equals(mounth) && d <=21 && "Травень".equals(mounth) ){
               String Taurus = "Телець";
                String read = "src\\zodiacs\\data\\Taurus.txt";
              
               String result = FileReader.readFile(read);
               ZodiacInfo zodiacInf =new ZodiacInfo();
            
               zodiacInf.zodiactxt.setText(result);
               zodiacInf.setVisible(true);
               this.setVisible(false);
               zodiacInf.txtZodaic.setText(Taurus);
               
           }
           else
               if(d >=22 && "Травень".equals(mounth) && d <=31 && "Травень".equals(mounth) ||d >=1 && "Червень".equals(mounth) && d <=21 && "Червень".equals(mounth) ){
               String Gemini = "Близнюки";
                String read = "src\\zodiacs\\data\\Gemini.txt";
              
               String result = FileReader.readFile(read);
               ZodiacInfo zodiacInf =new ZodiacInfo();
            
               zodiacInf.zodiactxt.setText(result);
               zodiacInf.setVisible(true);
               this.setVisible(false);
                 zodiacInf.txtZodaic.setText(Gemini);
           }
           else
               if(d >=22 && "Червень".equals(mounth) && d <=30 && "Червень".equals(mounth) ||d >=1 && "Липень".equals(mounth) && d <=22 && "Липень".equals(mounth) ){
               String Cancer = "Рак";
              String read = "src\\zodiacs\\data\\Cancer.txt";
              
               String result = FileReader.readFile(read);
               ZodiacInfo zodiacInf =new ZodiacInfo();
            
               zodiacInf.zodiactxt.setText(result);
               zodiacInf.setVisible(true);
               this.setVisible(false);
                zodiacInf.txtZodaic.setText(Cancer);
           }
           else
               if(d >=23 && "Липень".equals(mounth) && d <=31 && "Липень".equals(mounth) ||d >=1 && "Серпень".equals(mounth) && d <=23 && "Серпень ".equals(mounth) ){
               String Leo = "Лев";
               String read = "src\\zodiacs\\data\\Leo.txt";
              
               String result = FileReader.readFile(read);
               ZodiacInfo zodiacInf =new ZodiacInfo();
            
               zodiacInf.zodiactxt.setText(result);
               zodiacInf.setVisible(true);
               this.setVisible(false);
                zodiacInf.txtZodaic.setText(Leo);
           }
           else
               if(d >=24 && "Серпень".equals(mounth) && d <=31 && "Серпень".equals(mounth) ||d >=1 && "Вересень".equals(mounth) && d <=22 && "Вересень".equals(mounth) ){
               String Virgo = "Діва";
                String read = "src\\zodiacs\\data\\Virgo.txt";
              
               String result = FileReader.readFile(read);
               ZodiacInfo zodiacInf =new ZodiacInfo();
            
               zodiacInf.zodiactxt.setText(result);
               zodiacInf.setVisible(true);
               this.setVisible(false);
                zodiacInf.txtZodaic.setText(Virgo);
           }
           else
               if(d >=23 && "Вересень".equals(mounth) && d <=30 && "Вересень".equals(mounth) ||d >=1 && "Жовтень".equals(mounth) && d <=23 && "Жовтень".equals(mounth) ){
               String Libra = "Терези";
              String read = "src\\zodiacs\\data\\Libra.txt";
              
               String result = FileReader.readFile(read);
               ZodiacInfo zodiacInf =new ZodiacInfo();
            
               zodiacInf.zodiactxt.setText(result);
               zodiacInf.setVisible(true);
               this.setVisible(false);
                zodiacInf.txtZodaic.setText(Libra);
           }
           else
               if(d >=24 && "Жовтень".equals(mounth) && d <=31 && "Жовтень".equals(mounth) ||d >=1 && "Листопад".equals(mounth) && d <=22 && "Листопад".equals(mounth) ){
               String Scorpius = "Скорпіон";
                String read = "src\\zodiacs\\data\\Scorpius.txt";
              
               String result = FileReader.readFile(read);
               ZodiacInfo zodiacInf =new ZodiacInfo();
            
               zodiacInf.zodiactxt.setText(result);
               zodiacInf.setVisible(true);
               this.setVisible(false);
                 zodiacInf.txtZodaic.setText(Scorpius);
           }
           else
               if(d >=23 && "Листопад".equals(mounth) && d <=30 && "Листопад".equals(mounth) ||d >=1 && "Грудень".equals(mounth) && d <=21 && "Грудень".equals(mounth) ){
               String Sagittarius = "Стрілець";
              String read = "src\\zodiacs\\data\\Sagittarius.txt";
              
               String result = FileReader.readFile(read);
               ZodiacInfo zodiacInf =new ZodiacInfo();
            
               zodiacInf.zodiactxt.setText(result);
               zodiacInf.setVisible(true);
               this.setVisible(false);
                 zodiacInf.txtZodaic.setText(Sagittarius);
           }
           else
               if(d >=22 && "Грудень".equals(mounth) && d <=31 && "Грудень".equals(mounth) ||d >=1 && "Січень".equals(mounth) && d <=20 && "Січень".equals(mounth) ){
               String Capricornus = "Козеріг";
               String read = "src\\zodiacs\\data\\Capricorn.txt";
              
               String result = FileReader.readFile(read);
               ZodiacInfo zodiacInf =new ZodiacInfo();
            
               zodiacInf.zodiactxt.setText(result);
               zodiacInf.setVisible(true);
               this.setVisible(false);
                  zodiacInf.txtZodaic.setText(Capricornus);
           }
           else
               if(d >=21 && "Січня".equals(mounth) && d <=31 && "Січень".equals(mounth) ||d >=1 && "Лютий".equals(mounth) && d <=20 && "Лютий".equals(mounth) ){
               String Aquarius = "Водолій";
               String read = "src\\zodiacs\\data\\Aquarius.txt";
              
               String result = FileReader.readFile(read);
               ZodiacInfo zodiacInf =new ZodiacInfo();
            
               zodiacInf.zodiactxt.setText(result);
               zodiacInf.setVisible(true);
               this.setVisible(false);
                 zodiacInf.txtZodaic.setText(Aquarius);
           }
           else
               if(d >=21 && "Лютий".equals(mounth) && d <=29 && "Лютий".equals(mounth) ||d >=1 && "Березень".equals(mounth) && d <=20 && "Березень".equals(mounth) ){
               String Pisces = "Риби";
               String read = "src\\zodiacs\\data\\Pisces.txt";
              
               String result = FileReader.readFile(read);
               ZodiacInfo zodiacInf =new ZodiacInfo();
            
               zodiacInf.zodiactxt.setText(result);
               zodiacInf.setVisible(true);
               this.setVisible(false);
                zodiacInf.txtZodaic.setText(Pisces);
           }
          
             
           
           
    }//GEN-LAST:event_btnOutIfoActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        infoAutor infoаutor = new infoAutor();
        infoаutor.setVisible(true);
        this.setVisible(false);
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
              aboutInfo info = new aboutInfo();
              info.setVisible(true);
              this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FirstWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FirstWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FirstWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FirstWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FirstWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOutIfo;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtBoxDay;
    private javax.swing.JTextField txtBoxMounth;
    // End of variables declaration//GEN-END:variables
}
